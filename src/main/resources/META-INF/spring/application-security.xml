<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:security="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security-3.0.xsd">
  
	<!--  Spring-Security 的配置 -->
	<!-- 注意use-expressions=true.表示开启表达式,否则表达式将不可用.
	see:http://www.family168.com/tutorial/springsecurity3/html/el-access.html
	 -->
	<security:http auto-config="true" use-expressions="true" >
		
		<security:intercept-url pattern="/resources/**" filters="none" />
		<security:intercept-url pattern="/common/**" filters="none" />
		
		<security:form-login login-page="/login" authentication-failure-url="/login?error=1" default-target-url="/admin" />
		<security:logout logout-success-url="/login" />
		
		<security:custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR"/>
	</security:http>
	
	<bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="accessDecisionManager" />
		<property name="securityMetadataSource" ref="securiyMetaDataSource" />
	</bean>
	
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider user-service-ref="userDetailsService">
			<security:password-encoder hash="md5">
				<security:salt-source user-property="username"/>
			</security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>
	<!-- 用户具体登录 -->
	<bean id="userDetailsService" class="com.jason.blog.infrastruture.spring.security.userdetails.UserDetailsServiceImpl" />
	
	<!-- 必须一致通过  -->
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<property name="decisionVoters">
			<list>
				<bean class="org.springframework.security.access.vote.RoleVoter">
					<!-- ROLE_ instead of A_  -->
					<property name="rolePrefix" value="A_" />
				</bean>
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</property>
		
		<property name="allowIfAllAbstainDecisions" value="true" />
	</bean>
	
	<bean id="securiyMetaDataSource" class="com.jason.blog.infrastruture.spring.security.metadatasource.URLSecurityMetadataSource" />
	
	<bean id="captchaService" class="com.octo.captcha.service.image.DefaultManageableImageCaptchaService">
		<property name="captchaEngine">
			<bean class="com.jason.blog.infrastruture.spring.security.captcha.JCaptchaEngine" />
		</property>
		<property name="minGuarantedStorageDelayInSeconds" value="180" />
	</bean>
</beans>